// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

generator zod {
  provider = "pnpx zod-prisma-types"
  output   = "../src/lib/schemas/generated/"
}

model Project {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  slug String  @unique
  path String
  name String
  icon String?

  img   Img @relation(fields: [imgId], references: [id])
  imgId Int @unique

  @@map("project")
}

model Img {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  hash    String  @unique
  url     String  @unique
  alt     String?
  caption String?

  project   Project?
  elevation Elevation?

  @@map("img")
}

model Elevation {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  name String

  img   Img @relation(fields: [imgId], references: [id])
  imgId Int @unique

  @@map("elevation")
}

model Mainmenu {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  slug     String     @unique
  name     String
  path     String
  icon     String?
  sumbmenu Menuitem[]

  @@map("main-menu")
}

model Menuitem {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  slug String  @unique
  name String
  path String
  icon String?

  mainmenu   Mainmenu @relation(fields: [mainmenuId], references: [id])
  mainmenuId Int      @unique

  @@map("sub-menu")
}

model User {
  id           String    @id @unique
  fullName     String?   @default("") @map("full_name")
  userName     String    @unique @map("user_name")
  auth_session Session[]
  key          Key[]
}

model Session {
  id             String @id @unique
  user_id        String
  active_expires BigInt
  idle_expires   BigInt
  user           User   @relation(references: [id], fields: [user_id], onDelete: Cascade)

  @@index([user_id])
}

model Key {
  id              String  @id @unique
  hashed_password String?
  user_id         String
  user            User    @relation(references: [id], fields: [user_id], onDelete: Cascade)

  @@index([user_id])
}
